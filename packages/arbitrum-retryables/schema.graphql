enum RetryableState {
  Created
  Canceled
  Redeemed
  RedeemFailed
}

type Retryable @entity {
  "ticket id of retryable"
  id: ID!

  "ticket's status"
  status: RetryableState!

  "tx that redeemed the current retryable. this could have been an autoredeem"
  retryTxHash: Bytes # bytes32
  "this value is the creation timestamp plus the lifetime, which can be extended"
  timeoutTimestamp: BigInt! # uint256
  "timestamp at which ticket was created"
  createdAtTimestamp: BigInt! # uint256
  "block number at which ticket was created"
  createdAtBlockNumber: BigInt! # uint256
  "tx at which ticket was created"
  createdAtTxHash: Bytes! # uint256
  "timestamp at which ticket was successfully redeemed"
  redeemedAtTimestamp: BigInt # uint256
  "true if 1st reedem was successful"
  isAutoRedeemed: Boolean

  "retryable execution params from event"
  sequenceNum: BigInt
  donatedGas: BigInt
  gasDonor: Bytes #Address
  maxRefund: BigInt
  submissionFeeRefund: BigInt

  "retryable submission params from tx input"
  requestId: Bytes
  l1BaseFee: BigInt
  deposit: BigInt
  callvalue: BigInt
  gasFeeCap: BigInt
  gasLimit: BigInt
  maxSubmissionFee: BigInt
  feeRefundAddress: String
  beneficiary: String
  retryTo: String
  retryData: Bytes
}

type TotalRetryableStats @entity {
  id: ID!

  totalCreated: BigInt!
  autoRedeemed: BigInt!
  successfullyRedeemed: BigInt!
  failedToRedeem: BigInt!
  canceled: BigInt!
}
