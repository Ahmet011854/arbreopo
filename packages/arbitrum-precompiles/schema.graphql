type L2ToL1Transaction @entity {
  id: ID!
  caller: Bytes! # address
  destination: Bytes! # address
  uniqueId: BigInt! # uint256
  batchNumber: BigInt! # uint256
  indexInBatch: BigInt! # uint256
  arbBlockNum: BigInt! # uint256
  ethBlockNum: BigInt! # uint256
  timestamp: BigInt! # uint256
  callvalue: BigInt! # uint256
  data: Bytes! # bytes
}

enum RetryableState {
  Created
  Canceled
  Redeemed
}

type Retryable @entity {
  "user tx hash that will be created by retryable. Bytes! # bytes32"
  id: ID!

  "ticket id of retryable"
  retryableTicketID: Bytes! # bytes32

  "tx that redeemed the current retryable. this could have been an autoredeem"
  redeemTxId: Bytes # bytes32


  "this value is the creation timestamp plus the lifetime, which can be extended"
  timeoutTimestamp: BigInt! # uint256

  status: RetryableState!
}
