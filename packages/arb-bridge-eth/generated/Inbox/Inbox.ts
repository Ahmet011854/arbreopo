// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class InboxMessageDelivered extends ethereum.Event {
  get params(): InboxMessageDelivered__Params {
    return new InboxMessageDelivered__Params(this);
  }
}

export class InboxMessageDelivered__Params {
  _event: InboxMessageDelivered;

  constructor(event: InboxMessageDelivered) {
    this._event = event;
  }

  get messageNum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class InboxMessageDeliveredFromOrigin extends ethereum.Event {
  get params(): InboxMessageDeliveredFromOrigin__Params {
    return new InboxMessageDeliveredFromOrigin__Params(this);
  }
}

export class InboxMessageDeliveredFromOrigin__Params {
  _event: InboxMessageDeliveredFromOrigin;

  constructor(event: InboxMessageDeliveredFromOrigin) {
    this._event = event;
  }

  get messageNum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PauseToggled extends ethereum.Event {
  get params(): PauseToggled__Params {
    return new PauseToggled__Params(this);
  }
}

export class PauseToggled__Params {
  _event: PauseToggled;

  constructor(event: PauseToggled) {
    this._event = event;
  }

  get enabled(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class RewriteToggled extends ethereum.Event {
  get params(): RewriteToggled__Params {
    return new RewriteToggled__Params(this);
  }
}

export class RewriteToggled__Params {
  _event: RewriteToggled;

  constructor(event: RewriteToggled) {
    this._event = event;
  }

  get enabled(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class WhitelistSourceUpdated extends ethereum.Event {
  get params(): WhitelistSourceUpdated__Params {
    return new WhitelistSourceUpdated__Params(this);
  }
}

export class WhitelistSourceUpdated__Params {
  _event: WhitelistSourceUpdated;

  constructor(event: WhitelistSourceUpdated) {
    this._event = event;
  }

  get newSource(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Inbox extends ethereum.SmartContract {
  static bind(address: Address): Inbox {
    return new Inbox("Inbox", address);
  }

  bridge(): Address {
    let result = super.call("bridge", "bridge():(address)", []);

    return result[0].toAddress();
  }

  try_bridge(): ethereum.CallResult<Address> {
    let result = super.tryCall("bridge", "bridge():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isCreateRetryablePaused(): boolean {
    let result = super.call(
      "isCreateRetryablePaused",
      "isCreateRetryablePaused():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isCreateRetryablePaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isCreateRetryablePaused",
      "isCreateRetryablePaused():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMaster(): boolean {
    let result = super.call("isMaster", "isMaster():(bool)", []);

    return result[0].toBoolean();
  }

  try_isMaster(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMaster", "isMaster():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  sendContractTransaction(
    maxGas: BigInt,
    gasPriceBid: BigInt,
    destAddr: Address,
    amount: BigInt,
    data: Bytes
  ): BigInt {
    let result = super.call(
      "sendContractTransaction",
      "sendContractTransaction(uint256,uint256,address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(maxGas),
        ethereum.Value.fromUnsignedBigInt(gasPriceBid),
        ethereum.Value.fromAddress(destAddr),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBigInt();
  }

  try_sendContractTransaction(
    maxGas: BigInt,
    gasPriceBid: BigInt,
    destAddr: Address,
    amount: BigInt,
    data: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sendContractTransaction",
      "sendContractTransaction(uint256,uint256,address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(maxGas),
        ethereum.Value.fromUnsignedBigInt(gasPriceBid),
        ethereum.Value.fromAddress(destAddr),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sendL2Message(messageData: Bytes): BigInt {
    let result = super.call("sendL2Message", "sendL2Message(bytes):(uint256)", [
      ethereum.Value.fromBytes(messageData)
    ]);

    return result[0].toBigInt();
  }

  try_sendL2Message(messageData: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sendL2Message",
      "sendL2Message(bytes):(uint256)",
      [ethereum.Value.fromBytes(messageData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sendL2MessageFromOrigin(messageData: Bytes): BigInt {
    let result = super.call(
      "sendL2MessageFromOrigin",
      "sendL2MessageFromOrigin(bytes):(uint256)",
      [ethereum.Value.fromBytes(messageData)]
    );

    return result[0].toBigInt();
  }

  try_sendL2MessageFromOrigin(messageData: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sendL2MessageFromOrigin",
      "sendL2MessageFromOrigin(bytes):(uint256)",
      [ethereum.Value.fromBytes(messageData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sendUnsignedTransaction(
    maxGas: BigInt,
    gasPriceBid: BigInt,
    nonce: BigInt,
    destAddr: Address,
    amount: BigInt,
    data: Bytes
  ): BigInt {
    let result = super.call(
      "sendUnsignedTransaction",
      "sendUnsignedTransaction(uint256,uint256,uint256,address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(maxGas),
        ethereum.Value.fromUnsignedBigInt(gasPriceBid),
        ethereum.Value.fromUnsignedBigInt(nonce),
        ethereum.Value.fromAddress(destAddr),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBigInt();
  }

  try_sendUnsignedTransaction(
    maxGas: BigInt,
    gasPriceBid: BigInt,
    nonce: BigInt,
    destAddr: Address,
    amount: BigInt,
    data: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sendUnsignedTransaction",
      "sendUnsignedTransaction(uint256,uint256,uint256,address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(maxGas),
        ethereum.Value.fromUnsignedBigInt(gasPriceBid),
        ethereum.Value.fromUnsignedBigInt(nonce),
        ethereum.Value.fromAddress(destAddr),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  shouldRewriteSender(): boolean {
    let result = super.call(
      "shouldRewriteSender",
      "shouldRewriteSender():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_shouldRewriteSender(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "shouldRewriteSender",
      "shouldRewriteSender():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  whitelist(): Address {
    let result = super.call("whitelist", "whitelist():(address)", []);

    return result[0].toAddress();
  }

  try_whitelist(): ethereum.CallResult<Address> {
    let result = super.tryCall("whitelist", "whitelist():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateRetryableTicketCall extends ethereum.Call {
  get inputs(): CreateRetryableTicketCall__Inputs {
    return new CreateRetryableTicketCall__Inputs(this);
  }

  get outputs(): CreateRetryableTicketCall__Outputs {
    return new CreateRetryableTicketCall__Outputs(this);
  }
}

export class CreateRetryableTicketCall__Inputs {
  _call: CreateRetryableTicketCall;

  constructor(call: CreateRetryableTicketCall) {
    this._call = call;
  }

  get destAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get l2CallValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxSubmissionCost(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get excessFeeRefundAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get callValueRefundAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get maxGas(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get gasPriceBid(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class CreateRetryableTicketCall__Outputs {
  _call: CreateRetryableTicketCall;

  constructor(call: CreateRetryableTicketCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateRetryableTicketNoRefundAliasRewriteCall extends ethereum.Call {
  get inputs(): CreateRetryableTicketNoRefundAliasRewriteCall__Inputs {
    return new CreateRetryableTicketNoRefundAliasRewriteCall__Inputs(this);
  }

  get outputs(): CreateRetryableTicketNoRefundAliasRewriteCall__Outputs {
    return new CreateRetryableTicketNoRefundAliasRewriteCall__Outputs(this);
  }
}

export class CreateRetryableTicketNoRefundAliasRewriteCall__Inputs {
  _call: CreateRetryableTicketNoRefundAliasRewriteCall;

  constructor(call: CreateRetryableTicketNoRefundAliasRewriteCall) {
    this._call = call;
  }

  get destAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get l2CallValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxSubmissionCost(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get excessFeeRefundAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get callValueRefundAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get maxGas(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get gasPriceBid(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class CreateRetryableTicketNoRefundAliasRewriteCall__Outputs {
  _call: CreateRetryableTicketNoRefundAliasRewriteCall;

  constructor(call: CreateRetryableTicketNoRefundAliasRewriteCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositEthCall extends ethereum.Call {
  get inputs(): DepositEthCall__Inputs {
    return new DepositEthCall__Inputs(this);
  }

  get outputs(): DepositEthCall__Outputs {
    return new DepositEthCall__Outputs(this);
  }
}

export class DepositEthCall__Inputs {
  _call: DepositEthCall;

  constructor(call: DepositEthCall) {
    this._call = call;
  }

  get maxSubmissionCost(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositEthCall__Outputs {
  _call: DepositEthCall;

  constructor(call: DepositEthCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _bridge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _whitelist(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCreateRetryablesCall extends ethereum.Call {
  get inputs(): PauseCreateRetryablesCall__Inputs {
    return new PauseCreateRetryablesCall__Inputs(this);
  }

  get outputs(): PauseCreateRetryablesCall__Outputs {
    return new PauseCreateRetryablesCall__Outputs(this);
  }
}

export class PauseCreateRetryablesCall__Inputs {
  _call: PauseCreateRetryablesCall;

  constructor(call: PauseCreateRetryablesCall) {
    this._call = call;
  }
}

export class PauseCreateRetryablesCall__Outputs {
  _call: PauseCreateRetryablesCall;

  constructor(call: PauseCreateRetryablesCall) {
    this._call = call;
  }
}

export class SendContractTransactionCall extends ethereum.Call {
  get inputs(): SendContractTransactionCall__Inputs {
    return new SendContractTransactionCall__Inputs(this);
  }

  get outputs(): SendContractTransactionCall__Outputs {
    return new SendContractTransactionCall__Outputs(this);
  }
}

export class SendContractTransactionCall__Inputs {
  _call: SendContractTransactionCall;

  constructor(call: SendContractTransactionCall) {
    this._call = call;
  }

  get maxGas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get gasPriceBid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get destAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SendContractTransactionCall__Outputs {
  _call: SendContractTransactionCall;

  constructor(call: SendContractTransactionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SendL1FundedContractTransactionCall extends ethereum.Call {
  get inputs(): SendL1FundedContractTransactionCall__Inputs {
    return new SendL1FundedContractTransactionCall__Inputs(this);
  }

  get outputs(): SendL1FundedContractTransactionCall__Outputs {
    return new SendL1FundedContractTransactionCall__Outputs(this);
  }
}

export class SendL1FundedContractTransactionCall__Inputs {
  _call: SendL1FundedContractTransactionCall;

  constructor(call: SendL1FundedContractTransactionCall) {
    this._call = call;
  }

  get maxGas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get gasPriceBid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get destAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SendL1FundedContractTransactionCall__Outputs {
  _call: SendL1FundedContractTransactionCall;

  constructor(call: SendL1FundedContractTransactionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SendL1FundedUnsignedTransactionCall extends ethereum.Call {
  get inputs(): SendL1FundedUnsignedTransactionCall__Inputs {
    return new SendL1FundedUnsignedTransactionCall__Inputs(this);
  }

  get outputs(): SendL1FundedUnsignedTransactionCall__Outputs {
    return new SendL1FundedUnsignedTransactionCall__Outputs(this);
  }
}

export class SendL1FundedUnsignedTransactionCall__Inputs {
  _call: SendL1FundedUnsignedTransactionCall;

  constructor(call: SendL1FundedUnsignedTransactionCall) {
    this._call = call;
  }

  get maxGas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get gasPriceBid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get destAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SendL1FundedUnsignedTransactionCall__Outputs {
  _call: SendL1FundedUnsignedTransactionCall;

  constructor(call: SendL1FundedUnsignedTransactionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SendL2MessageCall extends ethereum.Call {
  get inputs(): SendL2MessageCall__Inputs {
    return new SendL2MessageCall__Inputs(this);
  }

  get outputs(): SendL2MessageCall__Outputs {
    return new SendL2MessageCall__Outputs(this);
  }
}

export class SendL2MessageCall__Inputs {
  _call: SendL2MessageCall;

  constructor(call: SendL2MessageCall) {
    this._call = call;
  }

  get messageData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SendL2MessageCall__Outputs {
  _call: SendL2MessageCall;

  constructor(call: SendL2MessageCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SendL2MessageFromOriginCall extends ethereum.Call {
  get inputs(): SendL2MessageFromOriginCall__Inputs {
    return new SendL2MessageFromOriginCall__Inputs(this);
  }

  get outputs(): SendL2MessageFromOriginCall__Outputs {
    return new SendL2MessageFromOriginCall__Outputs(this);
  }
}

export class SendL2MessageFromOriginCall__Inputs {
  _call: SendL2MessageFromOriginCall;

  constructor(call: SendL2MessageFromOriginCall) {
    this._call = call;
  }

  get messageData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SendL2MessageFromOriginCall__Outputs {
  _call: SendL2MessageFromOriginCall;

  constructor(call: SendL2MessageFromOriginCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SendUnsignedTransactionCall extends ethereum.Call {
  get inputs(): SendUnsignedTransactionCall__Inputs {
    return new SendUnsignedTransactionCall__Inputs(this);
  }

  get outputs(): SendUnsignedTransactionCall__Outputs {
    return new SendUnsignedTransactionCall__Outputs(this);
  }
}

export class SendUnsignedTransactionCall__Inputs {
  _call: SendUnsignedTransactionCall;

  constructor(call: SendUnsignedTransactionCall) {
    this._call = call;
  }

  get maxGas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get gasPriceBid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get destAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SendUnsignedTransactionCall__Outputs {
  _call: SendUnsignedTransactionCall;

  constructor(call: SendUnsignedTransactionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class StartRewriteAddressCall extends ethereum.Call {
  get inputs(): StartRewriteAddressCall__Inputs {
    return new StartRewriteAddressCall__Inputs(this);
  }

  get outputs(): StartRewriteAddressCall__Outputs {
    return new StartRewriteAddressCall__Outputs(this);
  }
}

export class StartRewriteAddressCall__Inputs {
  _call: StartRewriteAddressCall;

  constructor(call: StartRewriteAddressCall) {
    this._call = call;
  }
}

export class StartRewriteAddressCall__Outputs {
  _call: StartRewriteAddressCall;

  constructor(call: StartRewriteAddressCall) {
    this._call = call;
  }
}

export class StopRewriteAddressCall extends ethereum.Call {
  get inputs(): StopRewriteAddressCall__Inputs {
    return new StopRewriteAddressCall__Inputs(this);
  }

  get outputs(): StopRewriteAddressCall__Outputs {
    return new StopRewriteAddressCall__Outputs(this);
  }
}

export class StopRewriteAddressCall__Inputs {
  _call: StopRewriteAddressCall;

  constructor(call: StopRewriteAddressCall) {
    this._call = call;
  }
}

export class StopRewriteAddressCall__Outputs {
  _call: StopRewriteAddressCall;

  constructor(call: StopRewriteAddressCall) {
    this._call = call;
  }
}

export class UnpauseCreateRetryablesCall extends ethereum.Call {
  get inputs(): UnpauseCreateRetryablesCall__Inputs {
    return new UnpauseCreateRetryablesCall__Inputs(this);
  }

  get outputs(): UnpauseCreateRetryablesCall__Outputs {
    return new UnpauseCreateRetryablesCall__Outputs(this);
  }
}

export class UnpauseCreateRetryablesCall__Inputs {
  _call: UnpauseCreateRetryablesCall;

  constructor(call: UnpauseCreateRetryablesCall) {
    this._call = call;
  }
}

export class UnpauseCreateRetryablesCall__Outputs {
  _call: UnpauseCreateRetryablesCall;

  constructor(call: UnpauseCreateRetryablesCall) {
    this._call = call;
  }
}

export class UpdateWhitelistSourceCall extends ethereum.Call {
  get inputs(): UpdateWhitelistSourceCall__Inputs {
    return new UpdateWhitelistSourceCall__Inputs(this);
  }

  get outputs(): UpdateWhitelistSourceCall__Outputs {
    return new UpdateWhitelistSourceCall__Outputs(this);
  }
}

export class UpdateWhitelistSourceCall__Inputs {
  _call: UpdateWhitelistSourceCall;

  constructor(call: UpdateWhitelistSourceCall) {
    this._call = call;
  }

  get newSource(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateWhitelistSourceCall__Outputs {
  _call: UpdateWhitelistSourceCall;

  constructor(call: UpdateWhitelistSourceCall) {
    this._call = call;
  }
}
