// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BridgeCallTriggered extends ethereum.Event {
  get params(): BridgeCallTriggered__Params {
    return new BridgeCallTriggered__Params(this);
  }
}

export class BridgeCallTriggered__Params {
  _event: BridgeCallTriggered;

  constructor(event: BridgeCallTriggered) {
    this._event = event;
  }

  get outbox(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get destAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class InboxToggle extends ethereum.Event {
  get params(): InboxToggle__Params {
    return new InboxToggle__Params(this);
  }
}

export class InboxToggle__Params {
  _event: InboxToggle;

  constructor(event: InboxToggle) {
    this._event = event;
  }

  get inbox(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class MessageDelivered extends ethereum.Event {
  get params(): MessageDelivered__Params {
    return new MessageDelivered__Params(this);
  }
}

export class MessageDelivered__Params {
  _event: MessageDelivered;

  constructor(event: MessageDelivered) {
    this._event = event;
  }

  get messageIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get beforeInboxAcc(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get inbox(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get kind(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get sender(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get messageDataHash(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class OutboxToggle extends ethereum.Event {
  get params(): OutboxToggle__Params {
    return new OutboxToggle__Params(this);
  }
}

export class OutboxToggle__Params {
  _event: OutboxToggle;

  constructor(event: OutboxToggle) {
    this._event = event;
  }

  get outbox(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Bridge__executeCallResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }
}

export class Bridge extends ethereum.SmartContract {
  static bind(address: Address): Bridge {
    return new Bridge("Bridge", address);
  }

  activeOutbox(): Address {
    let result = super.call("activeOutbox", "activeOutbox():(address)", []);

    return result[0].toAddress();
  }

  try_activeOutbox(): ethereum.CallResult<Address> {
    let result = super.tryCall("activeOutbox", "activeOutbox():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowedInboxList(param0: BigInt): Address {
    let result = super.call(
      "allowedInboxList",
      "allowedInboxList(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_allowedInboxList(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "allowedInboxList",
      "allowedInboxList(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowedInboxes(inbox: Address): boolean {
    let result = super.call(
      "allowedInboxes",
      "allowedInboxes(address):(bool)",
      [ethereum.Value.fromAddress(inbox)]
    );

    return result[0].toBoolean();
  }

  try_allowedInboxes(inbox: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedInboxes",
      "allowedInboxes(address):(bool)",
      [ethereum.Value.fromAddress(inbox)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  allowedOutboxList(param0: BigInt): Address {
    let result = super.call(
      "allowedOutboxList",
      "allowedOutboxList(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_allowedOutboxList(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "allowedOutboxList",
      "allowedOutboxList(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowedOutboxes(outbox: Address): boolean {
    let result = super.call(
      "allowedOutboxes",
      "allowedOutboxes(address):(bool)",
      [ethereum.Value.fromAddress(outbox)]
    );

    return result[0].toBoolean();
  }

  try_allowedOutboxes(outbox: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedOutboxes",
      "allowedOutboxes(address):(bool)",
      [ethereum.Value.fromAddress(outbox)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  executeCall(
    destAddr: Address,
    amount: BigInt,
    data: Bytes
  ): Bridge__executeCallResult {
    let result = super.call(
      "executeCall",
      "executeCall(address,uint256,bytes):(bool,bytes)",
      [
        ethereum.Value.fromAddress(destAddr),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(data)
      ]
    );

    return new Bridge__executeCallResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_executeCall(
    destAddr: Address,
    amount: BigInt,
    data: Bytes
  ): ethereum.CallResult<Bridge__executeCallResult> {
    let result = super.tryCall(
      "executeCall",
      "executeCall(address,uint256,bytes):(bool,bytes)",
      [
        ethereum.Value.fromAddress(destAddr),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bridge__executeCallResult(value[0].toBoolean(), value[1].toBytes())
    );
  }

  inboxAccs(param0: BigInt): Bytes {
    let result = super.call("inboxAccs", "inboxAccs(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_inboxAccs(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("inboxAccs", "inboxAccs(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  messageCount(): BigInt {
    let result = super.call("messageCount", "messageCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_messageCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("messageCount", "messageCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DeliverMessageToInboxCall extends ethereum.Call {
  get inputs(): DeliverMessageToInboxCall__Inputs {
    return new DeliverMessageToInboxCall__Inputs(this);
  }

  get outputs(): DeliverMessageToInboxCall__Outputs {
    return new DeliverMessageToInboxCall__Outputs(this);
  }
}

export class DeliverMessageToInboxCall__Inputs {
  _call: DeliverMessageToInboxCall;

  constructor(call: DeliverMessageToInboxCall) {
    this._call = call;
  }

  get kind(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get messageDataHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DeliverMessageToInboxCall__Outputs {
  _call: DeliverMessageToInboxCall;

  constructor(call: DeliverMessageToInboxCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ExecuteCallCall extends ethereum.Call {
  get inputs(): ExecuteCallCall__Inputs {
    return new ExecuteCallCall__Inputs(this);
  }

  get outputs(): ExecuteCallCall__Outputs {
    return new ExecuteCallCall__Outputs(this);
  }
}

export class ExecuteCallCall__Inputs {
  _call: ExecuteCallCall;

  constructor(call: ExecuteCallCall) {
    this._call = call;
  }

  get destAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ExecuteCallCall__Outputs {
  _call: ExecuteCallCall;

  constructor(call: ExecuteCallCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get returnData(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetInboxCall extends ethereum.Call {
  get inputs(): SetInboxCall__Inputs {
    return new SetInboxCall__Inputs(this);
  }

  get outputs(): SetInboxCall__Outputs {
    return new SetInboxCall__Outputs(this);
  }
}

export class SetInboxCall__Inputs {
  _call: SetInboxCall;

  constructor(call: SetInboxCall) {
    this._call = call;
  }

  get inbox(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetInboxCall__Outputs {
  _call: SetInboxCall;

  constructor(call: SetInboxCall) {
    this._call = call;
  }
}

export class SetOutboxCall extends ethereum.Call {
  get inputs(): SetOutboxCall__Inputs {
    return new SetOutboxCall__Inputs(this);
  }

  get outputs(): SetOutboxCall__Outputs {
    return new SetOutboxCall__Outputs(this);
  }
}

export class SetOutboxCall__Inputs {
  _call: SetOutboxCall;

  constructor(call: SetOutboxCall) {
    this._call = call;
  }

  get outbox(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOutboxCall__Outputs {
  _call: SetOutboxCall;

  constructor(call: SetOutboxCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
